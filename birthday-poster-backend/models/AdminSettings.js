const mongoose = require('mongoose');

const AdminSettingsSchema = new mongoose.Schema({
  name: String,
  date: String,
  type: String,
  photoId: mongoose.Schema.Types.ObjectId,
  videoId: mongoose.Schema.Types.ObjectId,
  posterId: mongoose.Schema.Types.ObjectId,
  video1Id: mongoose.Schema.Types.ObjectId,
  video2Id: mongoose.Schema.Types.ObjectId,
  audioId: mongoose.Schema.Types.ObjectId,
  posterVideoId: mongoose.Schema.Types.ObjectId,
  mergedVideoId: mongoose.Schema.Types.ObjectId,
  //sampleVideoId:mongoose.Schema.Types.ObjectId,
  gifId: mongoose.Schema.Types.ObjectId,
  boyVideoId1: mongoose.Schema.Types.ObjectId,
  girlVideoId1: mongoose.Schema.Types.ObjectId,
  childBoyVideoId1: mongoose.Schema.Types.ObjectId,
  childGirlVideoId1: mongoose.Schema.Types.ObjectId,
   boyVideoId2: mongoose.Schema.Types.ObjectId,
  girlVideoId2: mongoose.Schema.Types.ObjectId,
  childBoyVideoId2: mongoose.Schema.Types.ObjectId,
  childGirlVideoId2: mongoose.Schema.Types.ObjectId,
   boyVideoId3: mongoose.Schema.Types.ObjectId,
  girlVideoId3: mongoose.Schema.Types.ObjectId,
  childBoyVideoId3: mongoose.Schema.Types.ObjectId,
  childGirlVideoId3: mongoose.Schema.Types.ObjectId,
   boyVideoId4: mongoose.Schema.Types.ObjectId,
  girlVideoId4: mongoose.Schema.Types.ObjectId,
  childBoyVideoId4: mongoose.Schema.Types.ObjectId,
  childGirlVideoId4: mongoose.Schema.Types.ObjectId,
  faceSwap: { type: Boolean, default: false },
  videosMergeOption: { type: Boolean, default: false },
  createdAt: { type: Date, default: Date.now },
});
module.exports = mongoose.model('AdminSettings', AdminSettingsSchema);